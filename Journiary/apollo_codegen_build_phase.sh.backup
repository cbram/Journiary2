#!/bin/bash

# Apollo iOS Code Generation Build Phase
# Füge dieses Script als "Run Script Phase" in Xcode hinzu
# Output Files: $(SRCROOT)/Journiary/GraphQL/Generated/Sources/Operations/Queries/HelloQuery.graphql.swift

# Nur bei Debug-Builds oder wenn GraphQL-Dateien geändert wurden
if [ "${CONFIGURATION}" != "Debug" ] && [ "${ACTION}" != "clean" ]; then
    echo "⏭ Apollo Code-Generation übersprungen (nicht Debug-Build)"
    exit 0
fi

cd "${SRCROOT}"

# Überprüfe ob Schema existiert
if [ ! -f "schema.graphqls" ]; then
    echo "⚠️  schema.graphqls nicht gefunden - überspringe Code-Generation"
    echo "   Führe './setup_apollo.sh' aus um das Schema herunterzuladen"
    exit 0
fi

# Erstelle Output-Verzeichnis falls nicht vorhanden
mkdir -p "Journiary/GraphQL/Generated/Sources"

# Überprüfe ob Code-Generation notwendig ist
SCHEMA_MODIFIED=$(stat -f "%m" "schema.graphqls" 2>/dev/null || echo "0")
OPERATIONS_MODIFIED=$(find "GraphQL/Operations" -name "*.graphql" -newer "schema.graphqls" 2>/dev/null | wc -l)
OUTPUT_EXISTS=$(ls "Journiary/GraphQL/Generated/Sources" 2>/dev/null | wc -l)

if [ "$OUTPUT_EXISTS" -gt 0 ] && [ "$OPERATIONS_MODIFIED" -eq 0 ] && [ -f "Journiary/GraphQL/Generated/.last_generated" ]; then
    LAST_GENERATED=$(cat "Journiary/GraphQL/Generated/.last_generated" 2>/dev/null || echo "0")
    if [ "$SCHEMA_MODIFIED" -le "$LAST_GENERATED" ]; then
        echo "✅ Apollo Code ist aktuell - Generation übersprungen"
        exit 0
    fi
fi

echo "🔧 Generiere Apollo Code..."

# Apollo iOS CLI Pfad (über Package Manager installiert)
APOLLO_CLI="${BUILD_DIR%Build/*}SourcePackages/checkouts/apollo-ios/apollo-ios-cli"

if [ -f "$APOLLO_CLI" ]; then
    # Code-Generation mit apollo-ios-cli ausführen
    "$APOLLO_CLI" generate \
        --ignore-version-mismatch \
        --path="${SRCROOT}" \
        --config-path="${SRCROOT}/apollo-codegen-config.json"
    
    # Timestamp für letzte Generation speichern
    date +%s > "Journiary/GraphQL/Generated/.last_generated"
    
    echo "✅ Apollo Code erfolgreich generiert"
else
    echo "⚠️  Apollo CLI nicht gefunden. Build wird fortgesetzt ohne Code-Generation."
    echo "   Stelle sicher, dass Apollo iOS über Package Manager hinzugefügt wurde."
    
    # Erstelle leere Dateien damit Build nicht fehlschlägt
    mkdir -p "Journiary/GraphQL/Generated/Sources/JourniaryAPI"
    touch "Journiary/GraphQL/Generated/Sources/JourniaryAPI/SchemaTypes.swift"
    
    echo "// Generated stub file" > "Journiary/GraphQL/Generated/Sources/JourniaryAPI/SchemaTypes.swift"
fi
